const { getCityFromArgs } = require('../../utils/city-util.js');
/**
 * NYC DOT Events Scraper
 * 
 * Scrapes events from NYC Department of Transportation (street closures, parades, festivals)
 * URL: https://www.nyc.gov/html/dot/html/motorist/wkndtraf.shtml
 */

const axios = require('axios');
const cheerio = require('cheerio');

class NYCDOTEvents {
    constructor() {
        this.venueName = 'NYC Department of Transportation';
        this.venueLocation = 'New York City Streets';
        this.baseUrl = 'https://www.nyc.gov';
        this.eventsUrl = 'https://www.nyc.gov/html/dot/html/motorist/wkndtraf.shtml';
        this.category = 'Street Events & Parades';
    }

    /**
     * Scrape events from NYC DOT
     * @returns {Promise<Array>} Array of event objects
     */
    async scrape() {
        console.log(`🚧 Scraping events from ${this.venueName}...`);
        
        try {
            const response = await axios.get(this.eventsUrl, {
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
                    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
                    'Accept-Language': 'en-US,en;q=0.9',
                    'Accept-Encoding': 'gzip, deflate, br',
                    'Cache-Control': 'max-age=0',
                    'sec-ch-ua': '"Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"',
                    'sec-ch-ua-mobile': '?0',
                    'sec-ch-ua-platform': '"macOS"',
                    'sec-fetch-dest': 'document',
                    'sec-fetch-mode': 'navigate',
                    'sec-fetch-site': 'none',
                    'sec-fetch-user': '?1',
                    'upgrade-insecure-requests': '1',
                    'Referer': 'https://www.google.com/',
                    'DNT': '1',
                    'Connection': 'keep-alive'
                },
                timeout: 15000
            });

            const $ = cheerio.load(response.data);
            const events = [];

            // Look for event/closure listings in tables and lists
            const eventSelectors = [
                'table tr', '.event-item', '.closure-item', '.street-event',
                '[class*="event"]', '.listing', '.traffic-item', 
                'li', 'ul li', 'ol li', '.list-item'
            ];

            eventSelectors.forEach(selector => {
                $(selector).each((index, element) => {
                    const $el = $(element);
                    let title = $el.find('td, th, .title, .event-title, .name').first().text().trim();
                    
                    if (!title) {
                        // For table rows, combine all cell text
                        const cellTexts = [];
                        $el.find('td').each((i, td) => {
                            const cellText = $(td).text().trim();
                            if (cellText && cellText.length > 0) {
                                cellTexts.push(cellText);
                            }
                        });
                        if (cellTexts.length > 0) {
                            title = cellTexts.join(' - ');
                        }
                    }
                    
                    if (!title) {
                        title = $el.text().trim();
                    }

                    if (title && this.isValidEvent(title)) {
                        // Look for date/time information
                        let dateText = '';
                        const dateSelectors = [
                            '.date', '.event-date', '[class*="date"]', 
                            'time', '.datetime', '.when', '.schedule', '.time-info'
                        ];
                        
                        for (const dateSelector of dateSelectors) {
                            const dateElement = $el.find(dateSelector).first();
                            if (dateElement.length > 0) {
                                dateText = dateElement.text().trim();
                                if (dateText && dateText.length < 100) break;
                            }
                        }

                        // Extract date from title or content if not found in selectors
                        if (!dateText) {
                            const dateMatch = title.match(/\b(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec|\d{1,2}\/\d{1,2}\/\d{2,4}|\d{1,2}-\d{1,2}-\d{2,4})\b/gi);
                            if (dateMatch) {
                                dateText = dateMatch[0];
                            }
                        }

                        // Look for location/street information
                        let location = this.venueLocation;
                        const locationSelectors = ['.location', '.street', '.where', '[class*="location"]', '.address'];
                        for (const locSelector of locationSelectors) {
                            const locElement = $el.find(locSelector).first();
                            if (locElement.length > 0) {
                                const locText = locElement.text().trim();
                                if (locText && locText.length > 0) {
                                    location = locText;
                                    break;
                                }
                            }
                        }

                        // Extract street names from title
                        const streetMatch = title.match(/\b(\w+\s+(street|st|avenue|ave|road|rd|boulevard|blvd|plaza|pl|way|drive|dr|lane|ln))\b/gi);
                        if (streetMatch && streetMatch[0]) {
                            location = `${streetMatch[0]}, New York, NY`;
                        }

                        // Look for event type
                        let eventType = this.category;
                        const typeKeywords = title.match(/\b(parade|festival|marathon|race|closure|construction|protest|march|celebration|fair|market)\b/gi);
                        if (typeKeywords && typeKeywords[0]) {
                            eventType = typeKeywords[0].charAt(0).toUpperCase() + typeKeywords[0].slice(1).toLowerCase();
                        }

                        const event = {
                            title: title.length > 150 ? title.substring(0, 150) + '...' : title,
                            venue: this.venueName,
                            location: location,
                            date: dateText || 'Check website for dates',
                            category: eventType,
                            link: this.eventsUrl,
                            source: 'NYCDOTEvents'
                        };

                        events.push(event);
                    }
                });
            });

            // Look for structured data in paragraphs
            $('p, div').each((index, element) => {
                if (index > 200) return false; // Limit processing
                
                const $el = $(element);
                const text = $el.text().trim();
                
                if (text.length > 20 && text.length < 500) {
                    const hasStreetKeywords = text.match(/\b(street|avenue|road|boulevard|closure|detour|parade|festival|marathon|traffic|blocked)\b/i);
                    const hasDatePattern = text.match(/\b(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec|\d{1,2}\/\d{1,2}|\d{1,2}-\d{1,2}|weekend|monday|tuesday|wednesday|thursday|friday|saturday|sunday)\b/i);
                    
                    if (hasStreetKeywords && hasDatePattern) {
                        const sentences = text.split('.').filter(sentence => sentence.trim().length > 10);
                        const title = sentences[0]?.trim() || '';
                        
                        if (title && this.isValidEvent(title)) {
                            const event = {
                                title: title.length > 150 ? title.substring(0, 150) + '...' : title,
                                venue: this.venueName,
                                location: this.venueLocation,
                                date: hasDatePattern[0] || 'Check website for dates',
                                category: this.category,
                                link: this.eventsUrl,
                                source: 'NYCDOTEvents'
                            };

                            events.push(event);
                        }
                    }
                }
            });

            // Remove duplicates
            const uniqueEvents = this.removeDuplicateEvents(events);

            console.log(`✅ ${this.venueName}: Found ${uniqueEvents.length} events`);
            return uniqueEvents;

        } catch (error) {
            console.error(`❌ Error scraping ${this.venueName}:`, error.message);
            return [];
        }
    }

    /**
     * Remove duplicate events based on title and date
     * @param {Array} events - Array of event objects
     * @returns {Array} Deduplicated events
     */
    removeDuplicateEvents(events) {
        const seen = new Set();
        return events.filter(event => {
            const key = `${event.title}-${event.date}`.toLowerCase();
            if (seen.has(key)) {
                return false;
            }
            seen.add(key);
            return true;
        });
    }

    /**
     * Check if the extracted text represents a valid event
     * @param {string} title - Event title to validate
     * @returns {boolean} Whether the title appears to be a valid event
     */
    isValidEvent(title) {
        if (!title || title.length < 10 || title.length > 300) return false;
        
        const invalidKeywords = [
            'home', 'about', 'contact', 'privacy', 'terms', 'cookie', 
            'newsletter', 'subscribe', 'follow', 'social', 'menu',
            'navigation', 'search', 'login', 'register', 'sign up',
            'facebook', 'twitter', 'instagram', 'youtube', 'linkedin',
            'more info', 'read more', 'learn more', 'view all',
            'click here', 'find out', 'discover', 'advertisement'
        ];
        
        // Check for valid event indicators
        const validKeywords = [
            'street', 'avenue', 'closure', 'parade', 'festival', 'marathon',
            'race', 'construction', 'detour', 'blocked', 'traffic'
        ];
        
        const titleLower = title.toLowerCase();
        const hasValidKeyword = validKeywords.some(keyword => titleLower.includes(keyword));
        const hasInvalidKeyword = invalidKeywords.some(keyword => titleLower.includes(keyword));
        
        return hasValidKeyword && !hasInvalidKeyword;
    }

    /**
     * Get venue information
     * @returns {Object} Venue details
     */
    getVenueInfo() {
        return {
            name: this.venueName,
            location: this.venueLocation,
            category: this.category,
            website: this.baseUrl
        };
    }
}

module.exports = NYCDOTEvents;
