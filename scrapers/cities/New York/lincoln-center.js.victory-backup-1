const { getCityFromArgs } = require('../../utils/city-util.js');

    determineCategory(title, description = '') {
        const combined = `${title} ${description}`.toLowerCase();
        
        if (combined.includes('opera') || combined.includes('metropolitan opera')) {
            return 'Opera';
        } else if (combined.includes('ballet') || combined.includes('dance') || combined.includes('american ballet')) {
            return 'Ballet/Dance';
        } else if (combined.includes('symphony') || combined.includes('philharmonic') || combined.includes('orchestra') || combined.includes('classical')) {
            return 'Classical Music';
        } else if (combined.includes('jazz') || combined.includes('jazz at lincoln center')) {
            return 'Jazz';
        } else if (combined.includes('chamber music') || combined.includes('recital') || combined.includes('quartet')) {
            return 'Chamber Music';
        } else if (combined.includes('theater') || combined.includes('play') || combined.includes('drama')) {
            return 'Theater';
        } else if (combined.includes('film') || combined.includes('movie') || combined.includes('cinema')) {
            return 'Film';
        } else if (combined.includes('lecture') || combined.includes('talk') || combined.includes('discussion')) {
            return 'Lecture/Talk';
        } else if (combined.includes('family') || combined.includes('children') || combined.includes('kids')) {
            return 'Family';
        } else if (combined.includes('education') || combined.includes('workshop') || combined.includes('masterclass')) {
            return 'Education';
        }
        
        return 'Cultural Event';
    }

    /**
     * Main scrape method that handles the scraping process
     * @returns {Promise<Array>} Array of formatted events
     */
    async scrape() {
        try {
            const events = await this.fetchEvents();
            
            // Filter out events with invalid titles (temporarily allow events without proper dates)
            const validEvents = events.filter(event => {
                return event.title && 
                       event.title.length >= 3 && 
                       !event.title.toLowerCase().includes('subscription') &&
                       !event.title.toLowerCase().includes('membership') &&
                       !event.title.toLowerCase().includes('support');
                       // Temporarily removed date validation to extract real events
            });
            
            console.log(`🗽 ${this.venueName}: Returning ${validEvents.length} valid events`);
            return validEvents;
            
        } catch (error) {
            console.error(`❌ ${this.venueName} scraper failed:`, error.message);
            return [];
        }
    }
}

// Function export for compatibility with runner/validator
module.exports = async (city) => {
  const scraper = new LincolnCenter();
  return await scraper.scrape(city);
};

// Also export the class for backward compatibility
module.exports.LincolnCenter = LincolnCenter;
