const { getCityFromArgs } = require('../../utils/city-util.js');
/**
 * Times Square NYC Events Scraper
 * 
 * Scrapes events from Times Square official website
 * URL: https://www.timessquarenyc.org/events
 */

const axios = require('axios');
const cheerio = require('cheerio');

class TimesSquareNYC {
    constructor() {
        this.venueName = 'Times Square NYC';
        this.venueLocation = 'Times Square, New York, NY';
        this.baseUrl = 'https://www.timessquarenyc.org';
        this.eventsUrl = 'https://www.timessquarenyc.org/events';
        this.category = 'Street Events & Festivals';
    }

    /**
     * Scrape events from Times Square NYC
     * @returns {Promise<Array>} Array of event objects
     */
    async scrape() {
        console.log(`🎪 Scraping events from ${this.venueName}...`);
        
        try {
            const response = await axios.get(this.eventsUrl, {
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
                    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
                    'Accept-Language': 'en-US,en;q=0.9',
                    'Accept-Encoding': 'gzip, deflate, br',
                    'Cache-Control': 'max-age=0',
                    'sec-ch-ua': '"Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"',
                    'sec-ch-ua-mobile': '?0',
                    'sec-ch-ua-platform': '"macOS"',
                    'sec-fetch-dest': 'document',
                    'sec-fetch-mode': 'navigate',
                    'sec-fetch-site': 'none',
                    'sec-fetch-user': '?1',
                    'upgrade-insecure-requests': '1',
                    'Referer': 'https://www.google.com/',
                    'DNT': '1',
                    'Connection': 'keep-alive'
                },
                timeout: 15000
            });

            const $ = cheerio.load(response.data);
            const events = [];

            // Look for event containers
            $('.event-item, .event-card, .event, [class*="event"]').each((index, element) => {
                const $el = $(element);
                let title = $el.find('h1, h2, h3, h4, .title, .event-title').first().text().trim();
                
                if (!title) {
                    title = $el.text().trim().split('\n')[0].trim();
                }

                if (title && this.isValidEvent(title)) {
                    // Look for date information
                    let dateText = '';
                    const dateSelectors = ['.date', '.event-date', '[class*="date"]', 'time', '.datetime'];
                    
                    for (const selector of dateSelectors) {
                        const dateElement = $el.find(selector).first();
                        if (dateElement.length > 0) {
                            dateText = dateElement.text().trim();
                            if (dateText) break;
                        }
                    }

                    // Look for link
                    let eventLink = $el.find('a').first().attr('href') || '';
                    if (eventLink && !eventLink.startsWith('http')) {
                        eventLink = this.baseUrl + eventLink;
                    }

                    const event = {
                        title: title,
                        venue: this.venueName,
                        location: this.venueLocation,
                        date: dateText || 'Check website for dates',
                        category: this.category,
                        link: eventLink || this.eventsUrl,
                        source: 'TimesSquareNYC'
                    };

                    events.push(event);
                }
            });

            // Fallback: look for general content containers
            if (events.length === 0) {
                $('div, section, article').each((index, element) => {
                    if (index > 50) return false; // Limit processing
                    
                    const $el = $(element);
                    const text = $el.text().trim();
                    
                    if (text.length > 20 && text.length < 300) {
                        const hasEventKeywords = text.match(/\b(event|festival|celebration|show|concert|parade|market)\b/i);
                        const hasDatePattern = text.match(/\b(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec|\d{1,2}\/\d{1,2}|\d{1,2}-\d{1,2})\b/i);
                        
                        if (hasEventKeywords || hasDatePattern) {
                            const title = text.split('\n')[0].trim();
                            
                            if (title && this.isValidEvent(title)) {
                                const event = {
                                    title: title,
                                    venue: this.venueName,
                                    location: this.venueLocation,
                                    date: hasDatePattern ? hasDatePattern[0] : 'Check website for dates',
                                    category: this.category,
                                    link: this.eventsUrl,
                                    source: 'TimesSquareNYC'
                                };

                                events.push(event);
                            }
                        }
                    }
                });
            }

            console.log(`✅ ${this.venueName}: Found ${events.length} events`);
            return events;

        } catch (error) {
            console.error(`❌ Error scraping ${this.venueName}:`, error.message);
            return [];
        }
    }

    /**
     * Check if the extracted text represents a valid event
     * @param {string} title - Event title to validate
     * @returns {boolean} Whether the title appears to be a valid event
     */
    isValidEvent(title) {
        if (!title || title.length < 5 || title.length > 200) return false;
        
        const invalidKeywords = [
            'home', 'about', 'contact', 'privacy', 'terms', 'cookie', 
            'newsletter', 'subscribe', 'follow', 'social', 'menu',
            'navigation', 'search', 'login', 'register', 'sign up',
            'facebook', 'twitter', 'instagram', 'youtube', 'linkedin'
        ];
        
        const titleLower = title.toLowerCase();
        return !invalidKeywords.some(keyword => titleLower.includes(keyword));
    }

    /**
     * Get venue information
     * @returns {Object} Venue details
     */
    getVenueInfo() {
        return {
            name: this.venueName,
            location: this.venueLocation,
            category: this.category,
            website: this.baseUrl
        };
    }
}


// Function export for compatibility with runner/validator
module.exports = async (city) => {
  const scraper = new TimesSquareNYC();
  return await scraper.scrape(city);
};

// Also export the class for backward compatibility
module.exports.TimesSquareNYC = TimesSquareNYC;
