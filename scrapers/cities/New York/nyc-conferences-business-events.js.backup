const { getCityFromArgs } = require('../../utils/city-util.js');
/**
 * NYC Conferences & Business Events Scraper
 * 
 * Scrapes conferences and business events from NYC convention centers, hotels, and corporate venues
 * URL: https://www.eventbrite.com/d/ny--new-york/business/
 */

const axios = require('axios');
const cheerio = require('cheerio');

class NYCConferencesBusinessEvents {
    constructor() {
        this.venueName = 'NYC Conferences & Business Events';
        this.venueLocation = 'Various NYC Convention Centers, Hotels & Corporate Venues';
        this.baseUrl = 'https://www.eventbrite.com';
        this.eventsUrl = 'https://www.eventbrite.com/d/ny--new-york/business/';
        this.category = 'Conferences & Business';
    }

    /**
     * Scrape events from NYC Conferences & Business Events
     * @returns {Promise<Array>} Array of event objects
     */
    async scrape() {
        console.log(`💼 Scraping events from ${this.venueName}...`);
        
        try {
            const response = await axios.get(this.eventsUrl, {
                headers: {
                    'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36',
                    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7',
                    'Accept-Language': 'en-US,en;q=0.9',
                    'Accept-Encoding': 'gzip, deflate, br',
                    'Cache-Control': 'max-age=0',
                    'sec-ch-ua': '"Not_A Brand";v="8", "Chromium";v="120", "Google Chrome";v="120"',
                    'sec-ch-ua-mobile': '?0',
                    'sec-ch-ua-platform': '"macOS"',
                    'sec-fetch-dest': 'document',
                    'sec-fetch-mode': 'navigate',
                    'sec-fetch-site': 'none',
                    'sec-fetch-user': '?1',
                    'upgrade-insecure-requests': '1',
                    'Referer': 'https://www.google.com/',
                    'DNT': '1',
                    'Connection': 'keep-alive'
                },
                timeout: 15000
            });

            const $ = cheerio.load(response.data);
            const events = [];

            // Look for conference/business-specific event containers
            const eventSelectors = [
                '.conference-event', '.business-event', '.summit-event',
                '.event-item', '.event-card', '.event', '.corporate-event',
                '[class*="conference"]', '[class*="business"]', '[class*="event"]',
                '.card', '.content-card', '.seminar-event', '.workshop-event'
            ];

            eventSelectors.forEach(selector => {
                $(selector).each((index, element) => {
                    const $el = $(element);
                    let title = $el.find('h1, h2, h3, h4, .title, .event-title, .conference-title, .name, .headline').first().text().trim();
                    
                    if (!title) {
                        const textContent = $el.text().trim();
                        const lines = textContent.split('\n').filter(line => line.trim().length > 0);
                        title = lines[0]?.trim() || '';
                    }

                    if (title && this.isValidEvent(title)) {
                        // Look for event date/time
                        let dateTime = '';
                        const dateSelectors = [
                            '.date', '.datetime', '[class*="date"]', 
                            'time', '.when', '.schedule', '.event-time', '.conference-time'
                        ];
                        
                        for (const dateSelector of dateSelectors) {
                            const dateElement = $el.find(dateSelector).first();
                            if (dateElement.length > 0) {
                                dateTime = dateElement.text().trim();
                                if (dateTime && dateTime.length < 150) break;
                            }
                        }

                        // Look for venue/convention center/hotel
                        let venue = this.venueLocation;
                        const venueSelectors = ['.venue', '.convention-center', '.hotel', '[class*="venue"]', '.location', '.conference-center'];
                        for (const venueSelector of venueSelectors) {
                            const venueElement = $el.find(venueSelector).first();
                            if (venueElement.length > 0) {
                                const venueText = venueElement.text().trim();
                                if (venueText && venueText.length > 0) {
                                    venue = venueText.length > 70 ? venueText.substring(0, 70) + '...' : venueText;
                                    break;
                                }
                            }
                        }

                        // Look for event type/format
                        let eventType = this.category;
                        const typeSelectors = ['.event-type', '.format', '.conference-type', '[class*="type"]'];
                        for (const typeSelector of typeSelectors) {
                            const typeElement = $el.find(typeSelector).first();
                            if (typeElement.length > 0) {
                                const typeText = typeElement.text().trim();
                                if (typeText && typeText.match(/\b(conference|summit|seminar|workshop|webinar|symposium|trade show)\b/i)) {
                                    eventType = typeText;
                                    break;
                                }
                            }
                        }

                        // Look for industry/sector
                        let industry = '';
                        const industrySelectors = ['.industry', '.sector', '.field', '[class*="industry"]'];
                        for (const industrySelector of industrySelectors) {
                            const industryElement = $el.find(industrySelector).first();
                            if (industryElement.length > 0) {
                                const industryText = industryElement.text().trim();
                                if (industryText && industryText.match(/\b(tech|finance|healthcare|marketing|real estate|AI|blockchain)\b/i)) {
                                    industry = industryText;
                                    break;
                                }
                            }
                        }

                        // Look for speakers/presenters
                        let speakers = '';
                        const speakerSelectors = ['.speakers', '.presenters', '.keynote', '[class*="speaker"]'];
                        for (const speakerSelector of speakerSelectors) {
                            const speakerElement = $el.find(speakerSelector).first();
                            if (speakerElement.length > 0) {
                                speakers = speakerElement.text().trim();
                                if (speakers) break;
                            }
                        }

                        // Look for registration fee/cost
                        let registrationFee = '';
                        const feeSelectors = ['.registration-fee', '.ticket-price', '.cost', '[class*="fee"]'];
                        for (const feeSelector of feeSelectors) {
                            const feeElement = $el.find(feeSelector).first();
                            if (feeElement.length > 0) {
                                const feeText = feeElement.text().trim();
                                if (feeText && (feeText.includes('$') || feeText.toLowerCase().includes('free'))) {
                                    registrationFee = feeText;
                                    break;
                                }
                            }
                        }

                        // Look for target audience
                        let targetAudience = '';
                        const audienceSelectors = ['.target-audience', '.for-whom', '.audience', '[class*="audience"]'];
                        for (const audienceSelector of audienceSelectors) {
                            const audienceElement = $el.find(audienceSelector).first();
                            if (audienceElement.length > 0) {
                                const audienceText = audienceElement.text().trim();
                                if (audienceText && audienceText.match(/\b(professionals|executives|entrepreneurs|students|developers)\b/i)) {
                                    targetAudience = audienceText;
                                    break;
                                }
                            }
                        }

                        // Look for agenda/schedule
                        let agenda = '';
                        const agendaSelectors = ['.agenda', '.schedule', '.program', '[class*="agenda"]'];
                        for (const agendaSelector of agendaSelectors) {
                            const agendaElement = $el.find(agendaSelector).first();
                            if (agendaElement.length > 0) {
                                agenda = agendaElement.text().trim();
                                if (agenda) break;
                            }
                        }

                        // Look for networking opportunities
                        let networking = '';
                        const networkingSelectors = ['.networking', '.social', '.mixer', '[class*="networking"]'];
                        for (const networkingSelector of networkingSelectors) {
                            const networkingElement = $el.find(networkingSelector).first();
                            if (networkingElement.length > 0) {
                                networking = networkingElement.text().trim();
                                if (networking) break;
                            }
                        }

                        // Look for CEU/CPE credits
                        let credits = '';
                        const creditSelectors = ['.credits', '.ceu', '.cpe', '[class*="credit"]'];
                        for (const creditSelector of creditSelectors) {
                            const creditElement = $el.find(creditSelector).first();
                            if (creditElement.length > 0) {
                                const creditText = creditElement.text().trim();
                                if (creditText && creditText.match(/\b(CEU|CPE|credit|hour)\b/i)) {
                                    credits = creditText;
                                    break;
                                }
                            }
                        }

                        // Look for sponsors/exhibitors
                        let sponsors = '';
                        const sponsorSelectors = ['.sponsors', '.exhibitors', '.partners', '[class*="sponsor"]'];
                        for (const sponsorSelector of sponsorSelectors) {
                            const sponsorElement = $el.find(sponsorSelector).first();
                            if (sponsorElement.length > 0) {
                                sponsors = sponsorElement.text().trim();
                                if (sponsors) break;
                            }
                        }

                        // Look for virtual/hybrid format
                        let format = '';
                        const formatSelectors = ['.format', '.delivery', '.virtual', '[class*="format"]'];
                        for (const formatSelector of formatSelectors) {
                            const formatElement = $el.find(formatSelector).first();
                            if (formatElement.length > 0) {
                                const formatText = formatElement.text().trim();
                                if (formatText && formatText.match(/\b(virtual|hybrid|in-person|online|live stream)\b/i)) {
                                    format = formatText;
                                    break;
                                }
                            }
                        }

                        // Look for registration deadline
                        let registrationDeadline = '';
                        const deadlineSelectors = ['.registration-deadline', '.deadline', '.early-bird', '[class*="deadline"]'];
                        for (const deadlineSelector of deadlineSelectors) {
                            const deadlineElement = $el.find(deadlineSelector).first();
                            if (deadlineElement.length > 0) {
                                registrationDeadline = deadlineElement.text().trim();
                                if (registrationDeadline) break;
                            }
                        }

                        // Look for materials/resources
                        let materials = '';
                        const materialSelectors = ['.materials', '.resources', '.handouts', '[class*="material"]'];
                        for (const materialSelector of materialSelectors) {
                            const materialElement = $el.find(materialSelector).first();
                            if (materialElement.length > 0) {
                                materials = materialElement.text().trim();
                                if (materials) break;
                            }
                        }

                        // Look for parking/accommodation
                        let logistics = '';
                        const logisticsSelectors = ['.logistics', '.parking', '.accommodation', '[class*="logistics"]'];
                        for (const logisticsSelector of logisticsSelectors) {
                            const logisticsElement = $el.find(logisticsSelector).first();
                            if (logisticsElement.length > 0) {
                                logistics = logisticsElement.text().trim();
                                if (logistics) break;
                            }
                        }

                        // Look for description
                        let description = '';
                        const descSelectors = ['.description', '.excerpt', '.summary', '.details', '.content'];
                        for (const descSelector of descSelectors) {
                            const descElement = $el.find(descSelector).first();
                            if (descElement.length > 0) {
                                description = descElement.text().trim();
                                if (description && description.length > 20 && description.length < 300) break;
                            }
                        }

                        // Look for link
                        let eventLink = $el.find('a').first().attr('href') || '';
                        if (eventLink && !eventLink.startsWith('http')) {
                            eventLink = this.baseUrl + eventLink;
                        }

                        const event = {
                            title: title,
                            venue: venue,
                            location: this.venueLocation,
                            date: dateTime || 'Check website for conference/business event schedule',
                            category: eventType,
                            industry: industry,
                            speakers: speakers,
                            registrationFee: registrationFee,
                            targetAudience: targetAudience,
                            agenda: agenda,
                            networking: networking,
                            credits: credits,
                            sponsors: sponsors,
                            format: format,
                            registrationDeadline: registrationDeadline,
                            materials: materials,
                            logistics: logistics,
                            description: description,
                            link: eventLink || this.eventsUrl,
                            source: 'NYCConferencesBusinessEvents'
                        };

                        events.push(event);
                    }
                });
            });

            // Look for general conference/business information
            $('div, section, article, p').each((index, element) => {
                if (index > 100) return false; // Limit processing
                
                const $el = $(element);
                const text = $el.text().trim();
                
                if (text.length > 30 && text.length < 400) {
                    const hasBusinessKeywords = text.match(/\b(conference|business|summit|seminar|workshop|networking|professional)\b/i);
                    const hasEventPattern = text.match(/\b(event|meeting|gathering|symposium|convention|trade show|expo)\b/i);
                    
                    if (hasBusinessKeywords && hasEventPattern) {
                        const sentences = text.split('.').filter(sentence => sentence.trim().length > 15);
                        const title = sentences[0]?.trim() || '';
                        
                        if (title && this.isValidEvent(title) && title.length > 20) {
                            const event = {
                                title: title.length > 150 ? title.substring(0, 150) + '...' : title,
                                venue: this.venueName,
                                location: this.venueLocation,
                                date: 'Check website for conference/business event schedule',
                                category: this.category,
                                link: this.eventsUrl,
                                source: 'NYCConferencesBusinessEvents'
                            };

                            events.push(event);
                        }
                    }
                }
            });

            // Remove duplicates
            const uniqueEvents = this.removeDuplicateEvents(events);

            console.log(`✅ ${this.venueName}: Found ${uniqueEvents.length} events`);
            return uniqueEvents;

        } catch (error) {
            console.error(`❌ Error scraping ${this.venueName}:`, error.message);
            return [];
        }
    }

    /**
     * Remove duplicate events based on title and venue
     * @param {Array} events - Array of event objects
     * @returns {Array} Deduplicated events
     */
    removeDuplicateEvents(events) {
        const seen = new Set();
        return events.filter(event => {
            const key = `${event.title}-${event.venue}`.toLowerCase();
            if (seen.has(key)) {
                return false;
            }
            seen.add(key);
            return true;
        });
    }

    /**
     * Check if the extracted text represents a valid event
     * @param {string} title - Event title to validate
     * @returns {boolean} Whether the title appears to be a valid event
     */
    isValidEvent(title) {
        if (!title || title.length < 8 || title.length > 200) return false;
        
        const invalidKeywords = [
            'home', 'about', 'contact', 'privacy', 'terms', 'cookie', 
            'newsletter', 'subscribe', 'follow', 'social media', 'menu',
            'navigation', 'search', 'login', 'register', 'sign up',
            'facebook', 'twitter', 'instagram', 'youtube', 'linkedin',
            'more info', 'read more', 'learn more', 'view all',
            'click here', 'find out', 'discover', 'directions'
        ];
        
        // Check for valid conference/business keywords
        const validKeywords = [
            'conference', 'business', 'summit', 'seminar', 'workshop', 'networking',
            'professional', 'event', 'meeting', 'gathering', 'symposium', 'convention',
            'trade show', 'expo', 'corporate', 'industry', 'training', 'leadership'
        ];
        
        const titleLower = title.toLowerCase();
        const hasValidKeyword = validKeywords.some(keyword => titleLower.includes(keyword));
        const hasInvalidKeyword = invalidKeywords.some(keyword => titleLower.includes(keyword));
        
        return hasValidKeyword && !hasInvalidKeyword;
    }

    /**
     * Get venue information
     * @returns {Object} Venue details
     */
    getVenueInfo() {
        return {
            name: this.venueName,
            location: this.venueLocation,
            category: this.category,
            website: this.baseUrl
        };
    }
}

module.exports = NYCConferencesBusinessEvents;
