const { getCityFromArgs } = require('../../utils/city-util.js');

  normalizeTitle(title) {
    if (!title) return '';
    
    // Convert to lowercase
    let normalized = title.toLowerCase();
    
    // Remove special characters and extra spaces
    normalized = normalized.replace(/[^a-z0-9 ]/g, ' ');
    
    // Replace multiple spaces with a single space
    normalized = normalized.replace(/\s+/g, ' ');
    
    // Trim any leading/trailing spaces
    normalized = normalized.trim();
    
    // Special case handling for known events with different naming formats
    if (normalized.includes('christmas') && normalized.includes('canada place')) {
      normalized = 'christmas at canada place';
    }
    
    if (normalized.includes('canada') && normalized.includes('together')) {
      normalized = 'canada together';
    }
    
    if (normalized.includes('port') && normalized.includes('day')) {
      normalized = 'port day';
    }
    
    if (normalized.includes('zumba')) {
      normalized = 'zumba at canada place';
    }
    
    return normalized;
  }
}

module.exports = CanadaPlaceEvents;

// Function export for compatibility with runner/validator
module.exports = async (city) => {
  const scraper = new CanadaPlaceEvents();
  return await scraper.scrape(city);
};

// Also export the class for backward compatibility
module.exports.CanadaPlaceEvents = CanadaPlaceEvents;
